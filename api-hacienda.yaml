openapi: 3.0.0
info:
  title: API Hacienda
  description: REST API for the Haciend project
  version: 1.0.0
servers:
  - url: https://localhost:3005
components:
  responses:
    404NoMatches:
      description: No matches found for the requested query

  requestBodies:
    search:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                type: string
            required:
            - query
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: service.users.decode_token
    api_key:
      type: apiKey
      name: X-Api-Key
      in: header
      x-apikeyInfoFunc: service.utils.api_key_auth
  schemas:
    company:
      type: object
      properties:
        id_compania:
          type: string
        codigo_actividad:
          type: string
        otras_senas:
          type: string
        cod_telefono:
          type: string
        canton:
          type: string
        distrito:
          type: string
        email:
          type: string
        ambiente:
          type: string
        cedula:
          type: string
        nombre_compania:
          type: string
        barrio:
          type: string
        password_hacienda:
          type: string
        telefono:
          type: string
        pin:
          type: string
        provincia:
          type: string
        nombre_comercial:
          type: string
        tipo_identificacion:
          type: string
        usuario_hacienda:
          type: string
        firma:
          type: string
          format: binary
        logo:
          type: string
          format: binary
        estado:
          type: string
    company_post_put:
      type: object
      allOf:
      - $ref: '#/components/schemas/company'
      - required:
        - id_compania
        - codigo_actividad
        - otras_senas
        - cod_telefono
        - canton
        - distrito
        - email
        - ambiente
        - cedula
        - nombre_compania
        - barrio
        - password_hacienda
        - telefono
        - pin
        - provincia
        - nombre_comercial
        - tipo_identificacion
        - usuario_hacienda
        - firma
        - estado
    doc_recipient:
      type: object
      properties:
        tipoIdentificacion:
          type: string
          enum: # placehold_this
            - '01'
            - '02'
            - '03'
            - '04'
        numeroIdentificacion:
          type: string
        nombre:
          type: string
        provincia:
          type: string
        canton:
          type: string
        distrito:
          type: string
        barrio:
          type: string
        otrasSenas:
          type: string
        otrasSenasExtranjero:
          type: string
        codigoPais:
          type: string
        telefono:
          type: string
        website:
          type: string
        correo:
          type: string
        nombreComercial:
          type: string
        correo_gastos: # deprecated soon(TM); kept for compatibility reasons
          type: string
        correosAdicionales: # deprecates correo_gastos
          type: array
          items:
            type: string
      required:
        - nombre
    doc_otherCharges:
      type: object
      properties:
        tipoDocumento:
          type: string
          enum: # placehold_this
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '99'
            - '' # allowed for compatibility reasons
        numeroIdentidadTercero:
          type: string
        nombreTercero:
          type: string
        detalle:
          type: string
        porcentaje:
          type: string
        montoCargo:
          type: string
      required:
        - tipoDocumento
        - detalle
        - montoCargo
    doc_reference:
      type: object
      properties:
        tipoDocumento:
          type: string
          enum: # placehold_this
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '99'
        numeroReferencia:
          type: string
        fecha:
          type: string
        codigo:
          type: string
          enum: # placehold_this
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '99'
        razon:
          type: string
      required:
        - tipoDocumento
        - numeroReferencia
        - fecha
        - codigo
        - razon
    doc_detail_tax_cut:
      type: object
      properties:
        Tipodocumento:
          type: string
          enum: # placehold_this
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '99'
        NumeroDocumento:
          type: string
          pattern: ^([aA][lL])[-]([0-9]{8})[-]([0-9]{2})$ # format al-00000000-00
        NombreInstitucion:
          type: string
        FechaEmision:
          type: string
        porcentajeExoneracion:
          type: string
          #pattern: ^([0-9]|[1][0-3])$ # digit range 0-13
        montoExoneracion:
          type: string
      required:
        - Tipodocumento
        - NumeroDocumento
        - NombreInstitucion
        - FechaEmision
        - porcentajeExoneracion
        - montoExoneracion
    doc_detail_tax:
      type: object
      properties:
        codigoTarifa:
          type: string
          enum: # placehold_this
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
        codigo:
          type: string
          enum: # placehold_this
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '12'
            - '99'
        tarifa:
          type: string
        monto:
          type: string
        factorIVA:
          type: string
        montoExportacion:
          type: string
        exoneracion:
          anyOf:
            - $ref: '#/components/schemas/doc_detail_tax_cut'
            - type: array
              items:
                $ref: '#/components/schemas/doc_detail_tax_cut'
      required:
        - monto
    doc_detail:
      type: object
      properties:
        numero:
          type: string
        codigo:
          type: string
          maxLength: 13
        cantidad:
          type: string
        codigoComercial:
          type: array
          items:
            type: object
            properties:
              tipo:
                type: string
                enum: # placehold_this
                  - '01'
                  - '02'
                  - '03'
                  - '04'
                  - '99'
              codigo:
                type: string
            required:
              - tipo
        unidadMedidaComercial:
          type: string
        unidad:
          type: string
        detalle:
          type: string
        precioUnitario:
          type: string
        montoTotal:
          type: string
        descuento:
          type: array
          maxItems: 5
          items:
            type: object
            properties:
              monto:
                type: string
              descripcionDescuento:
                type: string
            required:
              - monto
              - descripcionDescuento
        subtotal:
          type: string
        impuesto:
          type: array
          items:
            $ref: '#/components/schemas/doc_detail_tax'
        impuestoNeto:
          type: string
        totalLinea:
          type: string
        partidaArancelaria:
          type: string
        baseImponible:
          type: string
      required:
        - numero
        - codigo
        - cantidad
        - unidad
        - precioUnitario
        - montoTotal
        - subtotal
        - impuestoNeto
        - totalLinea
    document:
      type: object
      properties:
        data:
          type: object
          properties:
            tipo:
              type: string
              enum: # placehold_this
                - '1'
                - '2'
                - '3'
                - '4'
                - '8'
                - '9'
            nombre_usuario:
              type: string
            situacion:
              type: string
            consecutivo:
              type: string
              minLength: 20
              maxLength: 20
            clavelarga:
              type: string
              minLength: 50
              maxLength: 50
            terminal:
              type: string
            sucursal:
              type: string
            fechafactura:
              type: string
            codigoActividad:
              type: string
              minLength: 6
              maxLength: 6
            otro_telefono:
              type: string
            condicionVenta:
              type: string
              enum: #placehold_this
                - '01'
                - '02'
                - '03'
                - '04'
                - '05'
                - '06'
                - '07'
                - '08'
                - '09'
                - '99'
            plazoCredito:
              type: string
            numOrden:
              type: string
            numReferencia:
              type: string
            codigo_vendedor:
              type: string
            receptor:
              $ref: '#/components/schemas/doc_recipient'
            medioPago:
              type: array
              items:
                type: object
                properties:
                  codigo:
                    type: string
                    enum: #placehold_this
                      - '01'
                      - '02'
                      - '03'
                      - '04'
                      - '05'
                      - '99'
                required:
                  - codigo
              minItems: 1
              maxItems: 4
            detalles:
              type: array
              items:
                $ref: '#/components/schemas/doc_detail'
            codigoTipoMoneda:
              type: object
              properties:
                tipoMoneda:
                  type: string
                tipoCambio:
                  type: string
              required:
                - tipoMoneda
                - tipoCambio
            totalServGravados:
              type: string
            totalServExentos:
              type: string
            totalServExonerado:
              type: string
            totalMercanciasGravados:
              type: string
            totalMercanciasExentos:
              type: string
            totalMercExonerada:
              type: string
            totalGravados:
              type: string
            totalExentos:
              type: string
            totalExonerado:
              type: string
            totalVentas:
              type: string
            totalDescuentos:
              type: string
            totalVentasNetas:
              type: string
            totalImpuestos:
              type: string
            totalIVADevuelto:
              type: string
            totalOtrosCargos:
              type: string
            totalComprobantes:
              type: string
            otrosCargos:
              anyOf:
              - type: object  # this is allowed, but ignored, for compatibility reasons
              - type: array
                maxItems: 15
                items:
                  $ref: '#/components/schemas/doc_otherCharges'
            referencia:
              anyOf:
                - type: string # allowed, but ignored, for compatibility reasons
                - $ref: '#/components/schemas/doc_reference' # allowed for compatibility reasons
                - type: array
                  items:
                    $ref: '#/components/schemas/doc_reference'
                    maxItems: 10
                - type: object # allowed for compatibility reasons
            otros:
              anyOf:
              - type: object
                properties:
                  otroTexto:
                    type: string
                  otroContenido:
                    type: string
                additionalProperties:
                  type: string
              - type: array
                items:
                  type: object
                  properties:
                    codigo:
                      type: string
                    texto:
                      type: string
                  additionalProperties:
                    type: string
          required:
            - tipo
            - nombre_usuario
            - consecutivo
            - clavelarga
            - fechafactura
            - codigoActividad
            - condicionVenta
            - medioPago
            - detalles
            - codigoTipoMoneda
            - totalVentas
            - totalVentasNetas
            - totalComprobantes
    mh_validations:
      type: object
      properties:
        data:
          type: object
          properties:
            id_compania:
              type: string
            clave:
              type: string
            es_consulta:
              type: boolean
          required:
            - id_compania
            - clave
            - es_consulta
      required:
        - data
    key:
      type: object
      properties:
        data:
          type: object
          properties:
            tipo:
              type: string
            nombre_usuario:
              type: string
            situacion:
              type: string
            consecutivo:
              type: string
            terminal:
              type: string
            sucursal:
              type: string
          required:
            - tipo
            - nombre_usuario
            - situacion
            - consecutivo
            - terminal
            - sucursal
      required:
        - data
    user:
      type: object
      properties:
        data:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
            name:
              type: string
            idrol:
              type: integer
            idcompanies:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                required:
                  - id
          required:
            - email
            - password
            - name
            - idrol
            - idcompanies
      required:
        - data
    user_companies:
      type: object
      properties:
        email:
          type: string
        idcompanies:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
            required:
              - id
      required:
        - email
        - idcompanies
    companies_smtp:
      type: object
      properties:
        data:
          type: object
          properties:
            host:
              type: string
            user:
              type: string
            password:
              type: string
            port:
              type: string
            encrypt_type:
              type: string
            sender:
              type: string
          required:
            - host
            - user
            - password
            - port
            - encrypt_type
            - sender
      required:
        - data
    email:
      type: object
      properties:
        receivers:
          type: string
        company_id:
          type: string
        subject:
          type: string
        content:
          type: string
        file1:
          type: string
          format: binary
        file2:
          type: string
          format: binary
        file3:
          type: string
          format: binary
      required:
        - receivers
        - company_id
        - subject
        - content
    email_mh:
      type: object
      properties:
        company_user:
          type: string
        key_mh:
          type: string
      required:
        - company_user
        - key_mh
    rspns_cabys:
      type: object
      properties:
        status:
          type: string
        cabys:
          type: array
          items:
            type: object
            properties:
              codigo:
                type: string
              descripcion:
                type: string
              impuesto:
                type: number
      required:
        - status
        - cabys
    rspns_sac:
      type: object
      properties:
        status:
          type: string
        cabysxsac:
          type: array
          items:
            type: object
            properties:
              codigocabys:
                type: string
              codigosac:
                type: string
              descripcabys:
                type: string
      required:
        - status
        - cabysxsac
    rspns_med:
      type: object
      properties:
        status:
          type: string
        medicamentos:
          type: array
          items:
            type: object
            properties:
              codigocabys:
                type: string
              principioms:
                type: string
              codigoatc:
                type: string
              principioatc:
                type: string
              descripcion:
                type: string
      required:
        - status
        - medicamentos
    rspns_person:
      type: object
      properties:
        status:
          type: string
        persona:
          type: object
          properties:
            cedula:
              type: string
            ubicacion:
              type: string
            expiracion:
              type: string
            nombre:
              type: string
            apellido1:
              type: string
            apellido2:
              type: string
      required:
        - status
        - persona
    login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    stdResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          anyOf:
          - type: object
          - type: array
        detail:
          type: string
        debug:
          type: string
      required:
      - status
    idn:
      type: object
      properties:
        tipoIdentificacion:
          type: string
          enum: # placehold_this
            - '01'
            - '02'
            - '03'
            - '04'
            # these ones are for compatibility reasons
            - '1'
            - '2'
            - '3'
            - '4'
        numeroIdentificacion:
          type: string
          minLength: 9
          maxLength: 12
      required:
      - tipoIdentificacion
      - numeroIdentificacion
    message:
      type: object
      properties:
        data:
          type: object
          properties:
            nombre_usuario:
              type: string
            claveHacienda:
              type: string
              minLength: 50
              maxLength: 50
            clavelarga:            
              type: string
              minLength: 50
              maxLength: 50
            emisor:
              $ref: '#/components/schemas/idn'
            mensaje:
              type: string
              enum: # placehold_this
                - '1'
                - '2'
                - '3'
            detalle:
              type: string
              maxLength: 160
            total:
              type: string
            consecutivo:
              type: string
              minLength: 20
              maxLength: 20
            receptor:
              $ref: '#/components/schemas/idn'
            montoImpuesto:
              type: string
            codigoActividad:
              type: string
              maxLength: 6
            condicionImpuesto:
              type: string
              enum: # placehold_this
                - '01'
                - '02'
                - '03'
                - '04'
                - '05'
            totalImpuestoAcreditar:
              type: string
            totalGastoAplicable:
              type: string
            correoEmisor:
              type: string
              maxLength: 160
          required:
          - nombre_usuario
          - claveHacienda
          - emisor
          - mensaje
          - detalle
          - total
          - consecutivo
          - receptor
          - montoImpuesto
  parameters:
    debug:
      name: {{debug_switch}}
      in: query
      required: false
      description: A parameter that specifies if responses will return debug information on errors.
      schema:
        type: string
    param_search:
      name: search
      in: query
      schema:
        type: string
paths:
  /api/companies:
    get:
      tags:
        - companies
      operationId: routes.companies.route_list_companies
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    post:
      tags:
        - companies
      summary: Creates a company.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/company_post_put'
      operationId: routes.companies.route_save_company
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    put:
      tags:
        - companies
      summary: Modify a company.
      requestBody:
        required: true
        content:
          multipart/from-data:
            schema:
              $ref: '#/components/schemas/company_post_put'
      operationId: routes.companies.route_modify_company
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/companies/{company_id}:
    get:
      tags:
        - companies
      operationId: routes.companies.route_get_company_byid
      parameters:
        - name: company_id
          in: path
          description: Company ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    delete:
      tags:
        - companies
      description: deletes a single company based on the id supplied
      operationId: routes.companies.route_delete_company
      parameters:
        - name: company_id
          in: path
          description: id of the company
          required: true
          schema:
            type: string
      responses:
        200:
          description: The company has been deleted
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    patch:
      tags:
       - companies
      description: updates an attribute of the given company
      operationId: routes.companies.patch_company
      parameters:
        - name: company_id
          in: path
          description: the company's id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/company'
      responses:
        200:
          description: company successfully patched
        400:
          description: invalid data
        404:
          description: company not found
        500:
          description: internal error
      security:
        - jwt: []
  /api/consult:
    get:
      tags:
        - consult
      summary: get documents by company, key and type
      operationId: routes.documents.consult_documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id_compania:
                      type: string
                    tipo_documento:
                      type: string
                    clave:
                      type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
  /api/documents:
    get:
      tags:
        - documents
      summary: get documents by company and type
      operationId: routes.documents.get_documents_report
      requestBody:
        required: true
        content:
          application/json:
            schema:
             properties:
               data:
                 type: object
                 properties:
                   id_compania:
                     type: string
                   tipo_documento:
                     type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    patch:
      tags:
        - documents
      summary: Processing documents in hacienda
      operationId: routes.documents.processing_documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mh_validations'
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - api_key: []
    post:
      tags:
        - documents
      summary: Create a document (FE, NC, ND FEE).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/document'
      operationId: routes.documents.create_documents
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - api_key: []
  /api/documents/{key}/pdf:
    get:
      tags:
      - utilities
      summary: Gets the api generated pdf for the specified document
      operationId: routes.documents.get_pdf
      parameters:
      - name: key
        in: path
        description: the key for the document to fetch it's pdf
        required: true
        schema:
          type: string
      responses:
        200:
          description: Ok
        401:
          description: Unauthorized
        404:
          description: Not Found
      security:
      - api_key: []
  /api/references/key:
    post:
      tags:
        - references
      summary: Create a document (FE, NC, ND FEE).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/key'
      operationId: routes.references.generated_key
      responses:
        200:
          description: Everything is ok
        401:
          description: UnAuthorized Token please renew again
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/users:
    post:
      tags:
        - users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      operationId: routes.users.create_new_user
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    put:
      tags:
      - users
      summary: Modify a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      operationId: routes.users.route_modify_user
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    get:
      tags:
      - users
      summary: Get the information of all users
      operationId: routes.users.route_list_users
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/users/companies:
    delete:
      tags:
      - users
      summary: Delete user companies.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_companies'
      operationId: routes.users.route_delete_user_companies
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/users/{user_id}:
    delete:
      tags:
      - users
      description: deletes a single user based on the id supplied
      operationId: routes.users.route_delete_user
      parameters:
      - name: user_id
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: The user has been deleted
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    get:
      tags:
      - users
      description: get information of a single user based on the id supplied
      operationId: routes.users.route_get_user_byid
      parameters:
      - name: user_id
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: the information was successfully displayed
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/companies/{company_id}/smtp:
    post:
      tags:
      - smtp data
      summary: Create a new smtp data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies_smtp'
      operationId: routes.company_smtp.route_save_company_smtp
      parameters:
      - name: company_id
        in: path
        description: Company ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    get:
      tags:
      - smtp data
      description: get information of a single company and it smtp data based on the id supplied
      operationId: routes.company_smtp.route_get_company_smtp
      parameters:
      - name: company_id
        in: path
        description: id of the company
        required: true
        schema:
          type: string
      responses:
        200:
          description: the information was successfully displayed
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    delete:
      tags:
      - smtp data
      description: delete information of a single company and it smtp data based on the id supplied
      operationId: routes.company_smtp.route_delete_company_smtp
      parameters:
      - name: company_id
        in: path
        description: id of the company
        required: true
        schema:
          type: string
      responses:
        200:
          description: the information was successfully displayed
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    put:
      tags:
      - smtp data
      summary: Modify a smtp data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies_smtp'
      operationId: routes.company_smtp.route_modify_company_smtp
      parameters:
      - name: company_id
        in: path
        description: Company ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
  /api/email:
    post:
      tags:
      - Sent Email
      summary: Send a custom email
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/email'
      operationId: routes.emails.route_send_email
      responses:
        200:
          description: Everything is ok
        500:
          description: there was an error starting the facial recognition system
      security:
        - jwt: []
    get:
      tags:
      - Sent Email
      summary: Send a email with the information of the document (FE,NC,etc)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_mh'
      operationId: routes.emails.send_email_fe
      responses:
        200:
          description: Everything is ok
          content:
            'application/json':
              schema:
                type: string
        401:
          description: UnAuthorized Token please renew again
        500:
          description: there was an error starting the facial recognition system
      security:
        - api_key: []
  /api/auth:
    get:
      tags:
      - Auth
      summary: Login into API
      operationId: routes.users.login
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/login'

      responses:
        '200':
          description: JWT token
          content:
            'application/json':
              schema:
                type: string
      security:
        - api_key: []
  /api/messages:
    post:
      tags:
      - RecipientMessage
      summary: Creates a RecipientMessage to be sent to Hacienda for validation
      operationId: routes.messages.create_message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message'
      responses:
        '201':
          description: Message created.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/stdResponse'
        '400':
          description: Bad request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/stdResponse'
      security:
      - api_key: []
    get:
      tags:
        - RecipientMessage
      summary: Returns the RecipientMessages issued by a Company.
      operationId: routes.messages.get_by_company
      parameters:
        - name: company
          in: query
          required: true
          description: results will be filtered through this company identifier.
          schema:
            type: string
      responses:
        200:
          description: returned messages for the company
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/stdResponse'
        400:
          description: the requested company is inactive
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/stdResponse'
        404:
          description: no company found for the requested id
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/stdResponse'
      security:
        - api_key: []
  /api/messages/{key}:
    get:
      tags:
      - RecipientMessage
      description: Process or query a RecipientMessage
      operationId: routes.messages.process_message
      parameters:
      - name: key
        in: path
        description: The identifying key of the resource
        required: true
        schema:
          type: string
      responses:
        200:
          description: Message handled correctly. Either the message was sent to hacienda or it's info was queried from Hacienda.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/stdResponse'
        404:
          description: Message not found.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/stdResponse'
      security:
      - api_key: []
  /cabys/meds:
    get:
      tags:
        - cabys
      summary: Performs a search on the medicaments collection returning matches for the requested query.
      operationId: routes.cabys.search_meds
      # this body could be a query parameter instead...?
      # parameters:
      # - name: search
      #   in: query
      #   schema:
      #     type: string
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        200:
          description: Matches found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rspns_med'
        404:
          $ref: '#/components/responses/404NoMatches'
      security:
        - api_key: []
  /cabys/sacs:
    get:
      tags:
        - cabys
      summary: Finds the specified SAC code(s) using the given Cabys code from the CabysXSac collection.
      operationId: routes.cabys.find_sacs_by_cabys
      # again... this body could be a query parameter, maybe...
      parameters:
        - name: cabys
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cabys:
                  type: string
              required:
              - cabys
      responses:
        200:
          description: Matches found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rspns_sac'
        400:
          $ref: '#/components/responses/404NoMatches'
      security:
        - api_key: []
  /cabys/goods:
    get:
      tags:
        - cabys
      summary: Performs a search on the cabys collection returning matches for the requested query.
      operationId: routes.cabys.search_cabys
      parameters:
        - $ref: '#/components/parameters/param_search'
      requestBody:
        $ref: '#/components/requestBodies/search'
      responses:
        200:
          description: Matches found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rspns_cabys'
        404:
          $ref: '#/components/responses/404NoMatches'
      security:
        - api_key: []
  /cabys/goods/{code}:
    get:
      tags:
        - cabys
      summary: obtains a cabys information by it's full cabys code
      operationId: routes.cabys.get
      parameters:
        - name: code
          in: path
          description: The 13 digit code for the requested CABYS
          required: true
          schema:
            type: string
      responses:
        200:
          description: ok #TODO
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stdResponse'
        400:
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stdResponse'
        404:
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stdResponse'
  /registry/persons/{person_id}:
    get:
      tags:
      - registry
      summary: Obtains the specified person from the registry collection.
      operationId: routes.registry.route_get_person
      parameters:
        - name: person_id
          in: path
          description: The ID number for the person to get info from.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Person found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rspns_person'
        404:
          description: Person not found
      security:
        - api_key: []
  /comprobantes:
    get:
      tags:
        - vouchers
      summary: Obtains a collection of vouchers.
      operationId: routes.documents.route_get_vouchers
      parameters:
        - in: query
          name: emisor
          schema:
            type: string
        - in: query
          name: receptor
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id_compania:
                      type: string
      responses:
        200:
          description: vouchers found
        206:
          description: vouchers found
        404:
          description: vouchers not found
  /comprobantes/{clave}:
    get:
      tags:
      - voucher
      summary: Obtains a single voucher.
      operationId: routes.documents.route_get_voucher_byid
      parameters:
        - in: path
          name: clave
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    id_compania:
                      type: string
      responses:
        200:
          description: voucher found
        404:
          description: voucher not found
      security:
        - api_key: []
tags:
  - name: companies
    description: Everything about your Companies
  - name: documents
    description: Everything about your documents
  - name: references
    description: Everything about your references data
